/*
 * File: app/view/UsersGrid.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.UsersGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.usersgrid',

    autoShow: true,
    id: 'usersgrid',
    frameHeader: false,
    title: 'User administration',
    forceFit: true,
    store: 'Users',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                loadMask: false
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    width: 400,
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            id: 'btnUserUpdate',
                            icon: 'icons/edit.png',
                            text: 'Edit'
                        },
                        {
                            xtype: 'button',
                            id: 'btnUserInsert',
                            icon: 'icons/insert.png',
                            text: 'Insert'
                        },
                        {
                            xtype: 'button',
                            id: 'btnUserDelete',
                            icon: 'icons/delete.png',
                            text: 'Delete'
                        },
                        {
                            xtype: 'button',
                            id: 'btnUserRefresh',
                            icon: 'icons/refresh.png',
                            text: 'Refresh'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'id',
                    text: 'Id'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'username',
                    text: 'Username'
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'password',
                    text: 'Password'
                }
            ]
        });

        me.callParent(arguments);
    }

});