/*
 * File: app/controller/MyGridPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('MyApp.controller.MyGridPanel', {
    extend: 'Ext.app.Controller',

    // As this controller's name is equal to MyGridPanel view,
    // the view is instantiated automatically.

     models: ['Customer'],
     views: ['CustomerDataForm'],

     init: function() {
        bview = Ext.widget('mygridpanel');
        console.log(bview);
        console.log('aasad');

        this.control({
          'button[id=btnDelete]': {
            click: this.onDeleteClick
          },
          'button[id=btnEdit]': {
            click: this.onEditClick
          },
          'mygridpanel': {  
            itemclick: this.onItemClick,
            selectionchange: this.onSelectionChange
          }
        });
    },
    onEditClick: function(button){
      // get selected record
      record =  button.up('mygridpanel').getSelectionModel().getSelection()[0];
      view = Ext.widget('frmCustomer');
      view.getForm().loadRecord(record);
    },
    onDeleteClick: function(button){
      console.log('Delete click!');
    },
    onItemClick: function(view,record, item,index,e,eOpts ){
      console.log(record.data.Name);
    },
    onSelectionChange: function(sm) {
      console.log('Selection change');
      if(!sm.hasSelection()){
        Ext.getCmp('btnDelete').disable();
        Ext.getCmp('btnEdit').disable();
        console.Log('disabled');
      }
      else
      {
        Ext.getCmp('btnDelete').enable();
        Ext.getCmp('btnEdit').enable();
        console.log('enabled');
      };
    }
});
